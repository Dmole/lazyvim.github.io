"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[5341],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(t),p=a,f=m["".concat(s,".").concat(p)]||m[p]||d[p]||o;return t?r.createElement(f,l(l({ref:n},c),{},{components:t})):r.createElement(f,l({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7294),a=t(6010);const o="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>_});var r=t(7462),a=t(7294),o=t(6010),l=t(2466),i=t(6550),s=t(1980),u=t(7392),c=t(12);function m(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??m(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=d(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[s,u]=f({queryString:t,groupId:r}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,c.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),h=(()=>{const e=s??m;return p({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,o]),tabValues:o}}var h=t(2389);const g="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),r=u[t].value;r!==i&&(m(n),s(r))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>c.push(e),onKeyDown:p,onClick:d},l,{className:(0,o.Z)("tabs__item",v,l?.className,{"tabs__item--active":i===n})}),t??n)})))}function k(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function w(e){const n=b(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g)},a.createElement(y,(0,r.Z)({},e,n)),a.createElement(k,(0,r.Z)({},e,n)))}function _(e){const n=(0,h.Z)();return a.createElement(w,(0,r.Z)({key:String(n)},e))}},6705:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var r=t(7462),a=(t(7294),t(3905)),o=t(4866),l=t(5162);const i={},s="Octo",u={unversionedId:"extras/util/octo",id:"extras/util/octo",title:"Octo",description:"You can enable the extra with the :LazyExtras command.",source:"@site/docs/extras/util/octo.md",sourceDirName:"extras/util",slug:"/extras/util/octo",permalink:"/extras/util/octo",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/extras/util/octo.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mini Hipatterns",permalink:"/extras/util/mini-hipatterns"},next:{title:"Project",permalink:"/extras/util/project"}},c={},m=[{value:"Includes the following extras",id:"includes-the-following-extras",level:3},{value:"octo.nvim",id:"octonvim",level:2},{value:"octo.nvim",id:"octonvim-1",level:2}],d={toc:m};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"octo"},(0,a.kt)("inlineCode",{parentName:"h1"},"Octo")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can enable the extra with the ",(0,a.kt)("inlineCode",{parentName:"p"},":LazyExtras")," command.\nPlugins marked as optional will only be configured if they are installed.")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Alternatively, you can add it to your ",(0,a.kt)("code",null,"lazy.nvim")," imports"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="lua/config/lazy.lua" {4}',title:'"lua/config/lazy.lua"',"{4}":!0},'require("lazy").setup({\n  spec = {\n    { "LazyVim/LazyVim", import = "lazyvim.plugins" },\n    { import = "lazyvim.plugins.extras.util.octo" },\n    { import = "plugins" },\n  },\n})\n'))),(0,a.kt)("p",null,"Below you can find a list of included plugins and their default settings."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"You don't need to copy the default settings to your config.\nThey are only shown here for reference.")),(0,a.kt)("h3",{id:"includes-the-following-extras"},"Includes the following extras"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/extras/lang/git"},"lang.git"))),(0,a.kt)("h2",{id:"octonvim"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/pwntester/octo.nvim"},"octo.nvim")),(0,a.kt)("p",null," Octo"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  enable_builtin = true,\n  default_to_projects_v2 = true,\n  default_merge_method = "squash",\n  picker = "telescope",\n}\n'))),(0,a.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "pwntester/octo.nvim",\n  cmd = "Octo",\n  event = { { event = "BufReadCmd", pattern = "octo://*" } },\n  init = function()\n    vim.treesitter.language.register("markdown", "octo")\n  end,\n  opts = {\n    enable_builtin = true,\n    default_to_projects_v2 = true,\n    default_merge_method = "squash",\n    picker = "telescope",\n  },\n  keys = {\n    { "<leader>gi", "<cmd>Octo issue list<CR>", desc = "List Isues (Octo)" },\n    { "<leader>gI", "<cmd>Octo issue search<CR>", desc = "Search Isues (Octo)" },\n    { "<leader>gp", "<cmd>Octo pr list<CR>", desc = "List PRs (Octo)" },\n    { "<leader>gP", "<cmd>Octo pr search<CR>", desc = "Search PRs (Octo)" },\n    { "<leader>gr", "<cmd>Octo repo list<CR>", desc = "List Repos (Octo)" },\n    { "<leader>gS", "<cmd>Octo search<CR>", desc = "Search (Octo)" },\n\n    { "<leader>a", "", desc = "+assignee (Otco)", ft = "octo" },\n    { "<leader>c", "", desc = "+comment/code (Otco)", ft = "octo" },\n    { "<leader>l", "", desc = "+label (Otco)", ft = "octo" },\n    { "<leader>i", "", desc = "+issue (Otco)", ft = "octo" },\n    { "<leader>r", "", desc = "+react (Otco)", ft = "octo" },\n    { "<leader>p", "", desc = "+pr (Otco)", ft = "octo" },\n    { "<leader>v", "", desc = "+review (Otco)", ft = "octo" },\n    { "@", "@<C-x><C-o>", mode = "i", ft = "octo", silent = true },\n    { "#", "#<C-x><C-o>", mode = "i", ft = "octo", silent = true },\n  },\n}\n')))),(0,a.kt)("h2",{id:"octonvim-1"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/pwntester/octo.nvim"},"octo.nvim")),(0,a.kt)("p",null," Octo Picker"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  if LazyVim.has("telescope.nvim") then\n    opts.picker = "telescope"\n  elseif LazyVim.has("fzf-lua") then\n    opts.picker = "fzf-lua"\n  else\n    LazyVim.error("`octo.nvim` requires `telescope.nvim` or `fzf-lua`")\n  end\n  local Signs = require("octo.ui.signs")\n\n  ---@type {buf: number, from: number, to: number, dirty: boolean}[]\n  local signs = {}\n\n  local unplace = Signs.unplace\n  function Signs.unplace(bufnr)\n    signs = vim.tbl_filter(function(s)\n      return s.buf ~= bufnr\n    end, signs)\n    return unplace(bufnr)\n  end\n\n  function Signs.place_signs(bufnr, start_line, end_line, is_dirty)\n    signs[#signs + 1] = { buf = bufnr, from = start_line, to = end_line, dirty = is_dirty }\n  end\n  -- stylua: ignore\n  local corners = {\n    top    = "\u250c\u2574",\n    middle = "\u2502 ",\n    last   = "\u2514\u2574",\n    single = "[ ",\n  }\n\n  --- Fixes octo\'s comment rendering to take wrapping into account\n  ---@param buf number\n  ---@param lnum number\n  ---@param vnum number\n  ---@param win number\n  table.insert(LazyVim.ui.virtual, function(buf, lnum, vnum, win)\n    lnum = lnum - 1\n    for _, s in ipairs(signs) do\n      if buf == s.buf and lnum >= s.from and lnum <= s.to then\n        local height = vim.api.nvim_win_text_height(win, { start_row = s.from, end_row = s.to }).all\n        local height_end = vim.api.nvim_win_text_height(win, { start_row = s.to, end_row = s.to }).all\n        local corner = corners.middle\n        if height == 1 then\n          corner = corners.single\n        elseif lnum == s.from and vnum == 0 then\n          corner = corners.top\n        elseif lnum == s.to and vnum == height_end - 1 then\n          corner = corners.last\n        end\n        return { { text = corner, texthl = s.dirty and "OctoDirty" or "IblScope" } }\n      end\n    end\n  end)\nend\n'))),(0,a.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "pwntester/octo.nvim",\n  opts = function(_, opts)\n    if LazyVim.has("telescope.nvim") then\n      opts.picker = "telescope"\n    elseif LazyVim.has("fzf-lua") then\n      opts.picker = "fzf-lua"\n    else\n      LazyVim.error("`octo.nvim` requires `telescope.nvim` or `fzf-lua`")\n    end\n    local Signs = require("octo.ui.signs")\n\n    ---@type {buf: number, from: number, to: number, dirty: boolean}[]\n    local signs = {}\n\n    local unplace = Signs.unplace\n    function Signs.unplace(bufnr)\n      signs = vim.tbl_filter(function(s)\n        return s.buf ~= bufnr\n      end, signs)\n      return unplace(bufnr)\n    end\n\n    function Signs.place_signs(bufnr, start_line, end_line, is_dirty)\n      signs[#signs + 1] = { buf = bufnr, from = start_line, to = end_line, dirty = is_dirty }\n    end\n    -- stylua: ignore\n    local corners = {\n      top    = "\u250c\u2574",\n      middle = "\u2502 ",\n      last   = "\u2514\u2574",\n      single = "[ ",\n    }\n\n    --- Fixes octo\'s comment rendering to take wrapping into account\n    ---@param buf number\n    ---@param lnum number\n    ---@param vnum number\n    ---@param win number\n    table.insert(LazyVim.ui.virtual, function(buf, lnum, vnum, win)\n      lnum = lnum - 1\n      for _, s in ipairs(signs) do\n        if buf == s.buf and lnum >= s.from and lnum <= s.to then\n          local height = vim.api.nvim_win_text_height(win, { start_row = s.from, end_row = s.to }).all\n          local height_end = vim.api.nvim_win_text_height(win, { start_row = s.to, end_row = s.to }).all\n          local corner = corners.middle\n          if height == 1 then\n            corner = corners.single\n          elseif lnum == s.from and vnum == 0 then\n            corner = corners.top\n          elseif lnum == s.to and vnum == height_end - 1 then\n            corner = corners.last\n          end\n          return { { text = corner, texthl = s.dirty and "OctoDirty" or "IblScope" } }\n        end\n      end\n    end)\n  end,\n}\n')))))}p.isMDXComponent=!0}}]);