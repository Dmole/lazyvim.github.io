"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[5283],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return t?a.createElement(h,l(l({ref:n},c),{},{components:t})):a.createElement(h,l({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(7294),r=t(6010);const o="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>_});var a=t(7462),r=t(7294),o=t(6010),l=t(2466),i=t(6550),s=t(1980),u=t(7392),c=t(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=m(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[s,u]=h({queryString:t,groupId:a}),[p,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,c.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),g=(()=>{const e=s??p;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var g=t(2389);const v="tabList__CuJ",b="tabItem_LNqP";function k(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),m=e=>{const n=e.currentTarget,t=c.indexOf(n),a=u[t].value;a!==i&&(p(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>c.push(e),onKeyDown:d,onClick:m},l,{className:(0,o.Z)("tabs__item",b,l?.className,{"tabs__item--active":i===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function w(e){const n=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v)},r.createElement(k,(0,a.Z)({},e,n)),r.createElement(y,(0,a.Z)({},e,n)))}function _(e){const n=(0,g.Z)();return r.createElement(w,(0,a.Z)({key:String(n)},e))}},1136:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var a=t(7462),r=(t(7294),t(3905)),o=t(4866),l=t(5162);const i={},s="R",u={unversionedId:"extras/lang/r",id:"extras/lang/r",title:"R",description:"You can enable the extra with the :LazyExtras command.",source:"@site/docs/extras/lang/r.md",sourceDirName:"extras/lang",slug:"/extras/lang/r",permalink:"/extras/lang/r",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/extras/lang/r.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python",permalink:"/extras/lang/python"},next:{title:"Ruby",permalink:"/extras/lang/ruby"}},c={},p=[{value:"R.nvim",id:"rnvim",level:2},{value:"cmp-r",id:"cmp-r",level:2},{value:"nvim-treesitter",id:"nvim-treesitter",level:2},{value:"nvim-lspconfig",id:"nvim-lspconfig",level:2},{value:"neotest-testthat",id:"neotest-testthat",level:2},{value:"nvim-cmp <em>(optional)</em>",id:"nvim-cmp-optional",level:2},{value:"neotest <em>(optional)</em>",id:"neotest-optional",level:2}],m={toc:p};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"r"},(0,r.kt)("inlineCode",{parentName:"h1"},"R")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can enable the extra with the ",(0,r.kt)("inlineCode",{parentName:"p"},":LazyExtras")," command.\nPlugins marked as optional will only be configured if they are installed.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Alternatively, you can add it to your ",(0,r.kt)("code",null,"lazy.nvim")," imports"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="lua/config/lazy.lua" {4}',title:'"lua/config/lazy.lua"',"{4}":!0},'require("lazy").setup({\n  spec = {\n    { "LazyVim/LazyVim", import = "lazyvim.plugins" },\n    { import = "lazyvim.plugins.extras.lang.r" },\n    { import = "plugins" },\n  },\n})\n'))),(0,r.kt)("p",null,"Below you can find a list of included plugins and their default settings."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"You don't need to copy the default settings to your config.\nThey are only shown here for reference.")),(0,r.kt)("h2",{id:"rnvim"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/R-nvim/R.nvim"},"R.nvim")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  -- Create a table with the options to be passed to setup()\n  R_args = { "--quiet", "--no-save" },\n  hook = {\n    on_filetype = function()\n      -- This function will be called at the FileType event\n      -- of files supported by R.nvim. This is an\n      -- opportunity to create mappings local to buffers.\n      vim.keymap.set("n", "<Enter>", "<Plug>RDSendLine", { buffer = true })\n      vim.keymap.set("v", "<Enter>", "<Plug>RSendSelection", { buffer = true })\n\n      -- Increase the width of which-key to handle the longer r-nvim descriptions\n      local wk = require("which-key")\n      -- Workaround from https://github.com/folke/which-key.nvim/issues/514#issuecomment-1987286901\n      wk.register({\n        ["<localleader>"] = {\n          a = { name = "+(a)ll", ["\ud83d\udeab"] = "which_key_ignore" },\n          b = { name = "+(b)etween marks", ["\ud83d\udeab"] = "which_key_ignore" },\n          c = { name = "+(c)hunks", ["\ud83d\udeab"] = "which_key_ignore" },\n          f = { name = "+(f)unctions", ["\ud83d\udeab"] = "which_key_ignore" },\n          g = { name = "+(g)oto", ["\ud83d\udeab"] = "which_key_ignore" },\n          k = { name = "+(k)nit", ["\ud83d\udeab"] = "which_key_ignore" },\n          p = { name = "+(p)aragraph", ["\ud83d\udeab"] = "which_key_ignore" },\n          q = { name = "+(q)uarto", ["\ud83d\udeab"] = "which_key_ignore" },\n          r = { name = "+(r) general", ["\ud83d\udeab"] = "which_key_ignore" },\n          s = { name = "+(s)plit or (s)end", ["\ud83d\udeab"] = "which_key_ignore" },\n          t = { name = "+(t)erminal", ["\ud83d\udeab"] = "which_key_ignore" },\n          v = { name = "+(v)iew", ["\ud83d\udeab"] = "which_key_ignore" },\n        },\n      })\n    end,\n  },\n  pdfviewer = ""\n}\n'))),(0,r.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "R-nvim/R.nvim",\n  lazy = false,\n  opts = {\n    -- Create a table with the options to be passed to setup()\n    R_args = { "--quiet", "--no-save" },\n    hook = {\n      on_filetype = function()\n        -- This function will be called at the FileType event\n        -- of files supported by R.nvim. This is an\n        -- opportunity to create mappings local to buffers.\n        vim.keymap.set("n", "<Enter>", "<Plug>RDSendLine", { buffer = true })\n        vim.keymap.set("v", "<Enter>", "<Plug>RSendSelection", { buffer = true })\n\n        -- Increase the width of which-key to handle the longer r-nvim descriptions\n        local wk = require("which-key")\n        -- Workaround from https://github.com/folke/which-key.nvim/issues/514#issuecomment-1987286901\n        wk.register({\n          ["<localleader>"] = {\n            a = { name = "+(a)ll", ["\ud83d\udeab"] = "which_key_ignore" },\n            b = { name = "+(b)etween marks", ["\ud83d\udeab"] = "which_key_ignore" },\n            c = { name = "+(c)hunks", ["\ud83d\udeab"] = "which_key_ignore" },\n            f = { name = "+(f)unctions", ["\ud83d\udeab"] = "which_key_ignore" },\n            g = { name = "+(g)oto", ["\ud83d\udeab"] = "which_key_ignore" },\n            k = { name = "+(k)nit", ["\ud83d\udeab"] = "which_key_ignore" },\n            p = { name = "+(p)aragraph", ["\ud83d\udeab"] = "which_key_ignore" },\n            q = { name = "+(q)uarto", ["\ud83d\udeab"] = "which_key_ignore" },\n            r = { name = "+(r) general", ["\ud83d\udeab"] = "which_key_ignore" },\n            s = { name = "+(s)plit or (s)end", ["\ud83d\udeab"] = "which_key_ignore" },\n            t = { name = "+(t)erminal", ["\ud83d\udeab"] = "which_key_ignore" },\n            v = { name = "+(v)iew", ["\ud83d\udeab"] = "which_key_ignore" },\n          },\n        })\n      end,\n    },\n    pdfviewer = ""\n  },\n  config = function(_, opts)\n    require("r").setup(opts)\n    require("r.pdf.generic").open = vim.ui.open\n  end,\n}\n')))),(0,r.kt)("h2",{id:"cmp-r"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/R-nvim/cmp-r"},"cmp-r")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,r.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{ "R-nvim/cmp-r" }\n')))),(0,r.kt)("h2",{id:"nvim-treesitter"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/nvim-treesitter/nvim-treesitter"},"nvim-treesitter")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  if type(opts.ensure_installed) == "table" then\n    vim.list_extend(opts.ensure_installed, { "markdown", "markdown_inline", "r", "rnoweb" })\n  end\nend\n'))),(0,r.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-treesitter/nvim-treesitter",\n  opts = function(_, opts)\n    if type(opts.ensure_installed) == "table" then\n      vim.list_extend(opts.ensure_installed, { "markdown", "markdown_inline", "r", "rnoweb" })\n    end\n  end,\n}\n')))),(0,r.kt)("h2",{id:"nvim-lspconfig"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/neovim/nvim-lspconfig"},"nvim-lspconfig")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  servers = {\n    r_language_server = {\n      root_dir = function(fname)\n        return require("lspconfig.util").root_pattern("DESCRIPTION", "NAMESPACE", ".Rbuildignore")(fname)\n          or require("lspconfig.util").find_git_ancestor(fname)\n          or vim.loop.os_homedir()\n      end,\n    },\n  },\n}\n'))),(0,r.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "neovim/nvim-lspconfig",\n  opts = {\n    servers = {\n      r_language_server = {\n        root_dir = function(fname)\n          return require("lspconfig.util").root_pattern("DESCRIPTION", "NAMESPACE", ".Rbuildignore")(fname)\n            or require("lspconfig.util").find_git_ancestor(fname)\n            or vim.loop.os_homedir()\n        end,\n      },\n    },\n  },\n}\n')))),(0,r.kt)("h2",{id:"neotest-testthat"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/shunsambongi/neotest-testthat"},"neotest-testthat")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,r.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "shunsambongi/neotest-testthat",\n}\n')))),(0,r.kt)("h2",{id:"nvim-cmp-optional"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/hrsh7th/nvim-cmp"},"nvim-cmp")," ",(0,r.kt)("em",{parentName:"h2"},"(optional)")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  opts.sources = opts.sources or {}\n  table.insert(opts.sources, { name = "cmp_r" })\nend\n'))),(0,r.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "hrsh7th/nvim-cmp",\n  optional = true,\n  dependencies = { "R-nvim/cmp-r" },\n  opts = function(_, opts)\n    opts.sources = opts.sources or {}\n    table.insert(opts.sources, { name = "cmp_r" })\n  end,\n}\n')))),(0,r.kt)("h2",{id:"neotest-optional"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/nvim-neotest/neotest"},"neotest")," ",(0,r.kt)("em",{parentName:"h2"},"(optional)")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  adapters = {\n    ["neotest-testthat"] = {},\n  },\n}\n'))),(0,r.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-neotest/neotest",\n  optional = true,\n  dependencies = {\n    "shunsambongi/neotest-testthat",\n  },\n  opts = {\n    adapters = {\n      ["neotest-testthat"] = {},\n    },\n  },\n}\n')))))}d.isMDXComponent=!0}}]);